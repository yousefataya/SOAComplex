<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/sp/getGradeEvaluationGradeCountReference" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:tns="http://employee.fact" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns mhdr oraext xp20 xref socket dvm oraxsl"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/HR/EmployeeService/getGradeEvaluationGradeCountReference"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ax211="http://employeeFinancial.bean.fact/xsd"
                xmlns:ax230="http://WorkFlowStructure.bean.fact/xsd"
                xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ns2="http://org.apache.axis2/xsd"
                xmlns:ax28="http://evaluation.bean.fact/xsd" xmlns:ax214="http://employeeInfoDetails.bean.fact/xsd"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax227="http://salarySlip.bean.fact/xsd"
                xmlns:ax217="http://leave.bean.fact/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax224="http://employment.bean.fact/xsd"
                xmlns:ax238="http://dao.fact/xsd" xmlns:ax233="http://utility.bean.fact/xsd"
                xmlns:ax225="http://common.bean.fact/xsd" xmlns:ax221="http://employee.bean.fact/xsd"
                xmlns:ax21="http://vacation.bean.fact/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                xmlns:ax236="http://email.bean.fact/xsd" xmlns:ax25="http://overTime.bean.fact/xsd">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/getGradeEvaluationGradeCountReference.wsdl"/>
            <oracle-xsl-mapper:rootElement name="OutputParameters" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/sp/getGradeEvaluationGradeCountReference"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/EmployeeService.wsdl"/>
            <oracle-xsl-mapper:rootElement name="getGradeEvaluationGradeCountResponse" namespace="http://employee.fact"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.1.0(XSLT Build 160608.1900.0023) AT [MON JAN 15 09:56:57 IST 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:getGradeEvaluationGradeCountResponse>
         <tns:return>
            <xsl:for-each select="/ns0:OutputParameters/ns0:P_CUR_INFO_GM/ns0:P_CUR_INFO_GM_Row">
               <ax238:arrEvaluationGradeCountGM>
                  <xsl:if test="ns0:ADM_BRN_CODE">
                     <ax238:branchId>
                        <xsl:value-of select="ns0:ADM_BRN_CODE"/>
                     </ax238:branchId>
                  </xsl:if>
                  <xsl:if test="ns0:ECF_CPF_CODE">
                     <ax238:departmentId>
                        <xsl:value-of select="ns0:ECF_CPF_CODE"/>
                     </ax238:departmentId>
                  </xsl:if>
                  <xsl:if test="ns0:CNT">
                     <ax238:employeeCountByGrade>
                        <xsl:value-of select="ns0:CNT"/>
                     </ax238:employeeCountByGrade>
                  </xsl:if>
                  <xsl:if test="ns0:A_DESC">
                     <ax238:gradeDescription>
                        <xsl:value-of select="ns0:A_DESC"/>
                     </ax238:gradeDescription>
                  </xsl:if>
                  <xsl:if test="ns0:CODE">
                     <ax238:gradeId>
                        <xsl:value-of select="ns0:CODE"/>
                     </ax238:gradeId>
                  </xsl:if>
               </ax238:arrEvaluationGradeCountGM>
            </xsl:for-each>
            <xsl:for-each select="/ns0:OutputParameters/ns0:P_CUR_INFO/ns0:P_CUR_INFO_Row">
               <ax238:arrEvaluationGradeCountP3>
                  <xsl:if test="ns0:ADM_BRN_CODE">
                     <ax238:branchId>
                        <xsl:value-of select="ns0:ADM_BRN_CODE"/>
                     </ax238:branchId>
                  </xsl:if>
                  <xsl:if test="ns0:ECF_CPF_CODE">
                     <ax238:departmentId>
                        <xsl:value-of select="ns0:ECF_CPF_CODE"/>
                     </ax238:departmentId>
                  </xsl:if>
                  <xsl:if test="ns0:CNT">
                     <ax238:employeeCountByGrade>
                        <xsl:value-of select="ns0:CNT"/>
                     </ax238:employeeCountByGrade>
                  </xsl:if>
                  <xsl:if test="ns0:A_DESC">
                     <ax238:gradeDescription>
                        <xsl:value-of select="ns0:A_DESC"/>
                     </ax238:gradeDescription>
                  </xsl:if>
                  <xsl:if test="ns0:CODE">
                     <ax238:gradeId>
                        <xsl:value-of select="ns0:CODE"/>
                     </ax238:gradeId>
                  </xsl:if>
               </ax238:arrEvaluationGradeCountP3>
            </xsl:for-each>
         </tns:return>
      </tns:getGradeEvaluationGradeCountResponse>
   </xsl:template>
</xsl:stylesheet>
