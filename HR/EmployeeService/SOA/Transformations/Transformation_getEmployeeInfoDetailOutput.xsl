<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/sp/getEmployeInfoDetailReference" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:tns="http://employee.fact" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns mhdr oraext xp20 xref socket dvm oraxsl"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/HR/EmployeeService/getEmployeInfoDetailReference"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ax211="http://employeeFinancial.bean.fact/xsd"
                xmlns:ax230="http://WorkFlowStructure.bean.fact/xsd"
                xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ns2="http://org.apache.axis2/xsd"
                xmlns:ax28="http://evaluation.bean.fact/xsd" xmlns:ax214="http://employeeInfoDetails.bean.fact/xsd"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax227="http://salarySlip.bean.fact/xsd"
                xmlns:ax217="http://leave.bean.fact/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax224="http://employment.bean.fact/xsd"
                xmlns:ax238="http://dao.fact/xsd" xmlns:ax233="http://utility.bean.fact/xsd"
                xmlns:ax225="http://common.bean.fact/xsd" xmlns:ax221="http://employee.bean.fact/xsd"
                xmlns:ax21="http://vacation.bean.fact/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                xmlns:ax236="http://email.bean.fact/xsd" xmlns:ax25="http://overTime.bean.fact/xsd">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/getEmployeInfoDetailReference.wsdl"/>
            <oracle-xsl-mapper:rootElement name="OutputParameters" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/sp/getEmployeInfoDetailReference"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/EmployeeService.wsdl"/>
            <oracle-xsl-mapper:rootElement name="getEmployeeInfoDetailResponse" namespace="http://employee.fact"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.1.0(XSLT Build 160608.1900.0023) AT [SUN JAN 14 14:54:39 IST 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
     <tns:getEmployeeInfoDetailResponse>
         <tns:return>
            <xsl:for-each select="/ns0:OutputParameters/ns0:OUT_EMPLOYEE_DEPENDENCIES/ns0:OUT_EMPLOYEE_DEPENDENCIES_Row">
               <ax214:employeeDependancies>
                  <xsl:if test="boolean(ns0:WH_BT)">
                     <ax225:birthDate>
                        <xsl:value-of select="ns0:WH_BT"/>
                     </ax225:birthDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:EMP_ACNT_NO)">
                     <ax225:empAccountNumber>
                        <xsl:value-of select="ns0:EMP_ACNT_NO"/>
                     </ax225:empAccountNumber>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:FNAME)">
                     <ax225:name>
                        <xsl:value-of select="ns0:FNAME"/>
                     </ax225:name>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:NATIONALITY)">
                     <ax225:nationality>
                        <xsl:value-of select="ns0:NATIONALITY"/>
                     </ax225:nationality>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:DEPENDENT_CODE)">
                     <ax214:dependentCode>
                        <xsl:value-of select="ns0:DEPENDENT_CODE"/>
                     </ax214:dependentCode>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:INS_BEGIN_DATE)">
                     <ax214:insuranceBeginDate>
                        <xsl:value-of select="ns0:INS_BEGIN_DATE"/>
                     </ax214:insuranceBeginDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:INS_DEGREE)">
                     <ax214:insuranceDegree>
                        <xsl:value-of select="ns0:INS_DEGREE"/>
                     </ax214:insuranceDegree>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:INS_END_DATE)">
                     <ax214:insuranceEndDate>
                        <xsl:value-of select="ns0:INS_END_DATE"/>
                     </ax214:insuranceEndDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:DOB_DOMARG)">
                     <ax214:marryDate>
                        <xsl:value-of select="ns0:DOB_DOMARG"/>
                     </ax214:marryDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:IDS_NAT_NO)">
                     <ax214:nationalityNumber>
                        <xsl:value-of select="ns0:IDS_NAT_NO"/>
                     </ax214:nationalityNumber>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:RELATIONSHIP_TYPE)">
                     <ax214:relationshipType>
                        <xsl:value-of select="ns0:RELATIONSHIP_TYPE"/>
                     </ax214:relationshipType>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:SUSPEND_DATE)">
                     <ax214:suspendedDate>
                        <xsl:value-of select="ns0:SUSPEND_DATE"/>
                     </ax214:suspendedDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:WIFE_WORK_FLG)">
                     <ax214:wifeWorkFlag>
                        <xsl:value-of select="ns0:WIFE_WORK_FLG"/>
                     </ax214:wifeWorkFlag>
                  </xsl:if>
               </ax214:employeeDependancies>
            </xsl:for-each>
            <xsl:for-each select="/ns0:OutputParameters/ns0:OUT_EMPLOYEE_DEPENDENCIES_KIDS/ns0:OUT_EMPLOYEE_DEPENDENCIES_KIDS_Row">
               <ax214:employeeDependanciesKids>
                  <xsl:if test="boolean(ns0:DOB_DOMARG)">
                     <ax225:birthDate>
                        <xsl:value-of select="ns0:DOB_DOMARG"/>
                     </ax225:birthDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:EMP_ACNT_NO)">
                     <ax225:empAccountNumber>
                        <xsl:value-of select="ns0:EMP_ACNT_NO"/>
                     </ax225:empAccountNumber>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:LNAME)">
                     <ax225:name>
                        <xsl:value-of select="ns0:LNAME"/>
                     </ax225:name>
                  </xsl:if>
                  <ax225:nationality/>
                  <ax214:attachment/>
                  <xsl:if test="boolean(ns0:DEPENDENT_CODE)">
                     <ax214:dependentCode>
                        <xsl:value-of select="ns0:DEPENDENT_CODE"/>
                     </ax214:dependentCode>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:GENDER)">
                     <ax214:gender>
                        <xsl:value-of select="ns0:GENDER"/>
                     </ax214:gender>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:INS_BEGIN_DATE)">
                     <ax214:insuranceBeginDate>
                        <xsl:value-of select="ns0:INS_BEGIN_DATE"/>
                     </ax214:insuranceBeginDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:INS_DEGREE)">
                     <ax214:insuranceDegree>
                        <xsl:value-of select="ns0:INS_DEGREE"/>
                     </ax214:insuranceDegree>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:SUSPEND_DATE)">
                     <ax214:insuranceSuspendDate>
                        <xsl:value-of select="ns0:SUSPEND_DATE"/>
                     </ax214:insuranceSuspendDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:MARITAL_STATUS)">
                     <ax214:maritalStatus>
                        <xsl:value-of select="ns0:MARITAL_STATUS"/>
                     </ax214:maritalStatus>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:IDS_NAT_NO)">
                     <ax214:nationalityNumber>
                        <xsl:value-of select="ns0:IDS_NAT_NO"/>
                     </ax214:nationalityNumber>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:RELATIONSHIP_TYPE)">
                     <ax214:relationshipType>
                        <xsl:value-of select="ns0:RELATIONSHIP_TYPE"/>
                     </ax214:relationshipType>
                  </xsl:if>
               </ax214:employeeDependanciesKids>
            </xsl:for-each>
            <xsl:for-each select="/ns0:OutputParameters/ns0:OUT_EMP_UPDATE_DEGREE/ns0:OUT_EMP_UPDATE_DEGREE_Row">
               <ax214:employeeUpdateDegrees>
                  <ax214:attachment/>
                  <xsl:if test="boolean(ns0:DIGITAL_BRAND)">
                     <ax214:averageDigital>
                        <xsl:value-of select="ns0:DIGITAL_BRAND"/>
                     </ax214:averageDigital>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:TAG_TEXT)">
                     <ax214:averageText>
                        <xsl:value-of select="ns0:TAG_TEXT"/>
                     </ax214:averageText>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:DEGREE_DATE)">
                     <ax214:degreeDate>
                        <xsl:value-of select="ns0:DEGREE_DATE"/>
                     </ax214:degreeDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:DEGREE_SER)">
                     <ax214:degreeId>
                        <xsl:value-of select="ns0:DEGREE_SER"/>
                     </ax214:degreeId>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:EMP_ACNT_NO)">
                     <ax214:empAccountNumber>
                        <xsl:value-of select="ns0:EMP_ACNT_NO"/>
                     </ax214:empAccountNumber>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:EMP_GRAD_SIDE)">
                     <ax214:empGraduatedSide>
                        <xsl:value-of select="ns0:EMP_GRAD_SIDE"/>
                     </ax214:empGraduatedSide>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:SCHOOL_NAME)">
                     <ax214:schoolName>
                        <xsl:value-of select="ns0:SCHOOL_NAME"/>
                     </ax214:schoolName>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:SNC_DEG_CODE)">
                     <ax214:scientificDegree>
                        <xsl:value-of select="ns0:SNC_DEG_CODE"/>
                     </ax214:scientificDegree>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:SPC_CODE)">
                     <ax214:spcCode>
                        <xsl:value-of select="ns0:SPC_CODE"/>
                     </ax214:spcCode>
                  </xsl:if>
               </ax214:employeeUpdateDegrees>
            </xsl:for-each>
            <xsl:for-each select="/ns0:OutputParameters/ns0:OUT_VOCATIONAL_CERTIFICATES/ns0:OUT_VOCATIONAL_CERTIFICATES_Row">
               <ax214:employeeVocationalCertificates>
                  <xsl:if test="boolean(ns0:CER_DESC)">
                     <ax214:certificateDescription>
                        <xsl:value-of select="ns0:CER_DESC"/>
                     </ax214:certificateDescription>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:CODE)">
                     <ax214:code>
                        <xsl:value-of select="ns0:CODE"/>
                     </ax214:code>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:EMP_ACNT_NO)">
                     <ax214:empAccountNumber>
                        <xsl:value-of select="ns0:EMP_ACNT_NO"/>
                     </ax214:empAccountNumber>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:TO_DATE_C)">
                     <ax214:endDate>
                        <xsl:value-of select="ns0:TO_DATE_C"/>
                     </ax214:endDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:DATE_GET_CER)">
                     <ax214:getCertificateDate>
                        <xsl:value-of select="ns0:DATE_GET_CER"/>
                     </ax214:getCertificateDate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:HOURS_OF_CER)">
                     <ax214:hoursOfCertificate>
                        <xsl:value-of select="ns0:HOURS_OF_CER"/>
                     </ax214:hoursOfCertificate>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:INSTITUTE)">
                     <ax214:institute>
                        <xsl:value-of select="ns0:INSTITUTE"/>
                     </ax214:institute>
                  </xsl:if>
                  <xsl:if test="boolean(ns0:FROM_DATE_C)">
                     <ax214:startDate>
                        <xsl:value-of select="ns0:FROM_DATE_C"/>
                     </ax214:startDate>
                  </xsl:if>
               </ax214:employeeVocationalCertificates>
            </xsl:for-each>
         </tns:return>
      </tns:getEmployeeInfoDetailResponse>
   </xsl:template>
</xsl:stylesheet>
