<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Aug 29 17:47:04 IDT 2017
  Author:  Usaid
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="AllCardsInquiry"
         targetNamespace="http://xmlns.oracle.com/CARD_MANAGEMENT/AllCardsInquiry/AllCardsInquiry"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.oracle.com/CARD_MANAGEMENT/AllCardsInquiry/AllCardsInquiry"
         xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ui="http://xmlns.oracle.com/soa/designer"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns1="http://xmlns.fact.com/ws/ACI"
         xmlns:ns2="http://xmlns.oracle.com/CARD_MANAGEMENT/AllCardsInquiry/AllCardsInquiry"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/CARD_MANAGEMENT/AllCardsInquiry/CBSReference"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/sp/CBSReference"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <import namespace="http://xmlns.oracle.com/pcbpel/adapter/db/sp/CBSReference"
          location="../Schemas/CBSReference_sp.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
  <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/CARD_MANAGEMENT/AllCardsInquiry/AllCardsInquiry"
          location="../WSDLs/AllCardsInquiryService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="allcardsinquiry_client" partnerLinkType="ns2:AllCardsInquiry" myRole="AllCardsInquiryProvider"/>
    <partnerLink name="CBSReference" partnerLinkType="ns3:CBSReference_plt" partnerRole="CBSReference_role"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:AllCardsInquiryRequestMessage"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns2:args_out_msg"/>
    <variable name="BusinessKey" type="xsd:string"/>
    <variable name="CompositeName" type="xsd:string"/>
    <variable name="TechSystem" type="xsd:string"/>
    <variable name="TechSystemOperation" type="xsd:string"/>
    <variable name="InstanceID" type="xsd:string"/>
    <variable name="SourceExecutionID" type="xsd:string"/>
    <variable name="SourceAppUserName" type="xsd:string"/>
    <variable name="ExecutionInput" type="xsd:string"/>
    <variable name="ExecutionStatus" type="xsd:string"/>
    <variable name="SourceAppCode" type="xsd:string"/>
    <variable name="FaultStr" type="xsd:string"/>
    <variable name="FaultCode" type="xsd:string"/>
    <variable name="ExecutionOutput" type="xsd:string"/>
    <variable name="ErrorBusCode" type="xsd:string"/>
    <variable name="ErrorBusMessage" type="xsd:string"/>
    <variable name="ErrorTechCode" type="xsd:string"/>
    <variable name="ErrorTechMessage" type="xsd:string"/>
    <variable name="ErrorTechDetails" type="xsd:string"/>
    <variable name="ExecutionID" type="xsd:string"/>
    <variable name="Invoke_GetAllCards_OutputVariable" messageType="ns3:args_out_msg"/>
  </variables>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in AllCardsInquiry.wsdl) -->
    <receive name="receiveInput" partnerLink="allcardsinquiry_client" portType="client:AllCardsInquiry_ptt"
             operation="AllCardsInquiry" variable="inputVariable" createInstance="yes"/>
    <assign name="Assign_DefaultVariables" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy>
        <from>'AllCardsInquiry'</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$CompositeName</to>
      </copy>
      <copy>
        <from>ora:getFlowId()</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InstanceID</to>
      </copy>
      <copy>
        <from>$inputVariable.payload/ns1:MessageHeader/ns1:TransactionID</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$SourceExecutionID</to>
      </copy>
      <copy>
        <from>$inputVariable.payload/ns1:MessageHeader/ns1:ApplicationUserName</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$SourceAppUserName</to>
      </copy>
      <copy>
        <from>$inputVariable.payload/ns1:MessageHeader/ns1:ApplicationCode</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$SourceAppCode</to>
      </copy>
      <copy>
        <from>'S'</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ExecutionStatus</to>
      </copy>
      <copy>
        <from>ora:toCDATA($inputVariable.payload)</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ExecutionInput</to>
      </copy>
    </assign>
    <extensionActivity xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <bpelx:exec name="Java_validation" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <![CDATA[//Mandatory Elements validation       
            try {       
                java.net.InetAddress ipAddress = java.net       
                                                     .InetAddress       
                                                     .getLocalHost();       
                String clientIp = (ipAddress.getHostAddress()).trim();       
             
                String compositeName = (String) getVariableData("CompositeName");       
                String transactionID = ((org.w3c.dom.Element)getVariableData("inputVariable", "payload", "//ns1:TransactionID")).getTextContent();      
                String applicationCode = ((org.w3c.dom.Element)getVariableData("inputVariable", "payload", "//ns1:ApplicationCode")).getTextContent();       
                String applicationUserName =       
                    ((org.w3c.dom.Element)getVariableData("inputVariable", "payload", "//ns1:ApplicationUserName")).getTextContent();      
                String pageIndex = ((org.w3c.dom.Element)getVariableData("inputVariable", "payload", "//ns1:PageIndex")).getTextContent();        
                String pageSize = ((org.w3c.dom.Element)getVariableData("inputVariable", "payload", "//ns1:PageSize")).getTextContent();       
                      
             
                String MandatoryField = null;       
             
                if (transactionID.equals("")) {       
                    MandatoryField = "TransactionID";       
                } else if (applicationCode.equals("")) {       
                    MandatoryField = "ApplicationCode";       
                } else if (applicationUserName.equals("")) {       
                    MandatoryField = "ApplicationUserName";       
                } else if (pageIndex.equals("")) {       
                    MandatoryField = "PageIndex";       
                } else if (pageSize.equals("")) {       
                    MandatoryField = "PageSize";       
                } 
             
                if (MandatoryField != null) {       
                    setVariableData("ExecutionStatus", "F");       
                    setVariableData("outputVariable", "payload", "//ns1:Status", "Failed");       
                    setVariableData("ErrorBusCode", "VF0001");       
                    setVariableData("ErrorBusMessage",       
                                    "Validation Fault : Unable to FulFill Transaction, Entry [ " + MandatoryField +       
                                    " ] is Mandatory.");       
                    setVariableData("ErrorTechCode", "OFM-VAL-0001");       
                    setVariableData("ErrorTechMessage", "Entry [ " + MandatoryField + " ] is Mandatory.");       
                } else {       
                    com.dimensions.mw.utils.validationManagement.ValidationManager validationManager =       
                        new com.dimensions.mw.utils.validationManagement.ValidationManager();       
                    String validationCheck =       
                        validationManager.ApplyValidation(applicationCode, compositeName, "isAllowedSource",       
                                                          compositeName + "###" + applicationCode + "###" +       
                                                          clientIp + "###" + "token" + "###" + applicationUserName);       
             
                    if (validationCheck == null) {       
                         
                    } else {       
                        setVariableData("ExecutionStatus", "F");       
                        setVariableData("outputVariable", "payload", "//ns1:Status", "Failed");       
                        setVariableData("ErrorBusCode", validationCheck.split("#")[0]);       
                        setVariableData("ErrorBusMessage", validationCheck.split("#")[1].split("##")[0]);       
                        setVariableData("ErrorTechCode", validationCheck.split("##")[1].split("###")[0]);       
                        setVariableData("ErrorTechMessage", validationCheck.split("###")[1].split("###-")[0]);       
                        setVariableData("ErrorTechDetails", validationCheck.split("###-")[1].split("#####")[0]);       
                    }       
                }       
             
            } catch (Exception exc) {       
         addAuditTrailEntry(exc);    
            }]]>
      </bpelx:exec>
    </extensionActivity>
    <if name="If_ValiditionSuccessful">
      <documentation>
        <![CDATA[Yes]]>
      </documentation>
      <condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ExecutionStatus = 'S'</condition>
      <sequence name="Sequence3">
        <sequence name="Sequence1"><extensionActivity xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
            <bpelx:exec name="Java_DBLog" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
              <![CDATA[try {      
                  String weblogicDomainName = "Unknown";      
                  String serverName = "Unknown";      
                  javax.naming.InitialContext ctx = null;      
                  ctx = new javax.naming.InitialContext();      
                  javax.management.MBeanServer beanServer =      
                      (javax.management.MBeanServer) ctx.lookup("java:comp/env/jmx/runtime");      
                  javax.management.ObjectName runtimeService =      
                      new javax.management.ObjectName("com.bea:Name=RuntimeService,Type=weblogic.management.mbeanservers.runtime.RuntimeServiceMBean");      
                  javax.management.ObjectName domainCFG =      
                      (javax.management.ObjectName) beanServer.getAttribute(runtimeService, "DomainConfiguration");      
                  weblogicDomainName = (String) beanServer.getAttribute(domainCFG, "Name");      
                  javax.management.ObjectName serverCFG =      
                      (javax.management.ObjectName) beanServer.getAttribute(runtimeService, "ServerConfiguration");      
                  serverName = (String) beanServer.getAttribute(serverCFG, "Name");      
            
                  String executionID = com.dimensions.mw.utils.compositeManagement.CompositeManager.getUniqueId();      
                  setVariableData("ExecutionID", executionID);      
                  String compositeName = (String) getVariableData("CompositeName");      
                  String sourceAppCode = (String) getVariableData("SourceAppCode");      
                  String sourceExecutionID = (String) getVariableData("SourceExecutionID");      
                  String sourceAppUserName = (String) getVariableData("SourceAppUserName");      
                  String executionInput = (String) getVariableData("ExecutionInput");      
                  String instanceID = (String) getVariableData("InstanceID");      
                  String bussinessKey = (String) getVariableData("BusinessKey");      
            
                  com.dimensions.mw.utils.loggerManagement.LoggerManager      
                     .insertProcessInstance(compositeName, executionID, sourceAppCode, sourceExecutionID, sourceAppUserName,      
                                            executionInput, instanceID, weblogicDomainName, serverName, bussinessKey);      
              } catch (Exception exc) {      
        addAuditTrailEntry(exc);    
              }]]>
            </bpelx:exec>
          </extensionActivity>
          <scope name="Scope1">
            <variables>
              <variable name="Invoke_GetAllCards_InputVariable" messageType="ns3:args_in_msg"/>
            </variables>
            <faultHandlers>
              <catchAll>
                <sequence name="Sequence2">
                  <extensionActivity xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                    <bpelx:exec name="Java_manageError" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                      <![CDATA[try {                         
                            String faultStr = (String)getVariableData("FaultStr");                         
                            String faultCode = (String)getVariableData("FaultCode");                         
                            String techSystemOperation = (String)getVariableData("TechSystemOperation");                         
                            String techSystem = (String)getVariableData("TechSystem");                 
                            String compositeName = (String)getVariableData("CompositeName");             
                                         
                            com.dimensions.mw.utils.errorManagement.inMemoryData.ErrorDefinitionBean errorDefinitionBean =                         
                                new com.dimensions.mw.utils.errorManagement.inMemoryData.ErrorDefinitionBean();                         
                                         
                            com.dimensions.mw.utils.errorManagement.ErrorManager errorManager = new com.dimensions.mw.utils.errorManagement.ErrorManager();                         
                                         
                            errorDefinitionBean = errorManager.getErrorInformation(faultCode+" "+faultStr,techSystem,techSystemOperation,compositeName);                          
                                 
                            setVariableData("outputVariable", "payload", "//ns1:ErrorBusCode",errorDefinitionBean.getErrorBussinessCode() );                  
                            setVariableData("outputVariable", "payload", "//ns1:ErrorBusMessage", errorDefinitionBean.getErrorBussinessMessage());                  
                            setVariableData("outputVariable", "payload", "//ns1:ErrorTechCode",errorDefinitionBean.getErrorTechCode());                  
                            setVariableData("outputVariable", "payload", "//ns1:ErrorTechMessage",errorDefinitionBean.getErrorTechMessage());              
                            setVariableData("outputVariable", "payload", "//ns1:ErrorTechDetails",techSystem+" | "+techSystemOperation+" | "+ errorDefinitionBean.getErrorTechDetails());        
                            
                                        
                    } catch (Exception exc) {    
                        addAuditTrailEntry(exc);  
                    }]]>
                    </bpelx:exec>
                  </extensionActivity>
                </sequence>
              </catchAll>
            </faultHandlers>
            <sequence name="Sequence4">
              <assign name="Assign_TechSystem">
                <copy>
                  <from>'CBS'</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TechSystem</to>
                </copy>
                <copy>
                  <from>'CARDGETALL'</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TechSystemOperation</to>
                </copy>
              </assign>
              <invoke name="Invoke_GetAllCards" partnerLink="CBSReference"
                      portType="ns3:CBSReference_ptt" operation="CBSReference"
                      inputVariable="Invoke_GetAllCards_InputVariable"
                      outputVariable="outputVariable" bpelx:invokeAsDetail="no"/>
            </sequence>
          </scope>
        </sequence>
        <extensionActivity xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
          <bpelx:exec name="Java_FinalDBLog" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
            <![CDATA[try {    
                  String executionID = (String) getVariableData("ExecutionID");    
                  String executionStatus = (String) getVariableData("ExecutionStatus");    
                  String sourceExecutionID = (String) getVariableData("SourceExecutionID");    
                  String executionOutput = (String) getVariableData("ExecutionOutput");    
                  String compositeName = (String) getVariableData("CompositeName");    
          
                  com.dimensions.mw.utils.loggerManagement.LoggerManager    
                     .updateProcessInstance(executionID, executionOutput, executionStatus, compositeName);    
              } catch (Exception exc) {    
                    addAuditTrailEntry(exc);  
              }]]>
          </bpelx:exec>
        </extensionActivity>
      </sequence>
      <else>
        <documentation>
          <![CDATA[No]]>
        </documentation>
        <empty name="Empty1"/>
      </else>
    </if>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="allcardsinquiry_client" portType="client:AllCardsInquiry_ptt"
           operation="AllCardsInquiry" variable="outputVariable"/>
  </sequence>
</process>