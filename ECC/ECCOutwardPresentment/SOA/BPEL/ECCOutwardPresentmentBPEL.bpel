<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri Sep 21 17:49:30 EEST 2018
  Author:  mmaam
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ECCOutwardPresentmentBPEL"
               targetNamespace="http://xmlns.oracle.com/ECC/ECCOutwardPresentment/ECCOutwardPresentmentBPEL"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/ECC/ECCOutwardPresentment/ECCOutwardPresentmentBPEL"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns1="http://xmlns.fact.com/ws/EOP"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/ECC/ECCOutwardPresentment/BS_ECCOUTPRESENTEDCHEQUEReference"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/sp/BS_ECCOUTPRESENTEDCHEQUEReference"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/ECC/ECCOutwardPresentment/GET_ECC_OUTWARD_PRESENTMENT_Reference"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/sp/GET_ECC_OUTWARD_PRESENTMENT_Reference"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/ECC/ECCOutwardPresentment/ECCOutwardPresentmentBPEL" location="../WSDLs/ECCOutwardPresentmentBPEL.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="eccoutwardpresentmentbpel_client" partnerLinkType="client:ECCOutwardPresentmentBPEL" myRole="ECCOutwardPresentmentBPELProvider"/>
    <partnerLink name="GET_ECC_OUTWARD_PRESENTMENT_Reference"
                 partnerLinkType="ns4:GET_ECC_OUTWARD_PRESENTMENT_Reference_plt"
                 partnerRole="GET_ECC_OUTWARD_PRESENTMENT_Reference_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:ECCOutwardPresentmentBPELRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:ECCOutwardPresentmentBPELResponseMessage"/>
    
    <variable name="CompositeName" type="xsd:string"/>
    <variable name="InstanceID" type="xsd:string"/>
    <variable name="SourceExecutionID" type="xsd:string"/>
    <variable name="SourceAppUserName" type="xsd:string"/>
    <variable name="ExecutionInput" type="xsd:string"/>
    <variable name="ExecutionStatus" type="xsd:string"/>
    <variable name="SourceAppCode" type="xsd:string"/>
    <variable name="FaultStr" type="xsd:string"/>
    <variable name="FaultCode" type="xsd:string"/>
    <variable name="ExecutionOutput" type="xsd:string"/>
    <variable name="ErrorBusCode" type="xsd:string"/>
    <variable name="ErrorBusMessage" type="xsd:string"/>
    <variable name="ErrorTechCode" type="xsd:string"/>
    <variable name="ErrorTechMessage" type="xsd:string"/>
    <variable name="ErrorTechDetails" type="xsd:string"/>
    <variable name="BusinessKey" type="xsd:string"/>
    <variable name="TechSystemOperation" type="xsd:string"/>
    <variable name="TechSystem" type="xsd:string"/>
    <variable name="ClientIPAddress" type="xsd:string"/>
    <variable name="ExecutionID" type="xsd:string"/>
    <variable name="Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable"
              messageType="ns4:args_in_msg"/>
    <variable name="Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_OutputVariable"
              messageType="ns4:args_out_msg"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ECCOutwardPresentmentBPEL.wsdl) -->
    <receive name="receiveInput" partnerLink="eccoutwardpresentmentbpel_client" portType="client:ECCOutwardPresentmentBPEL" operation="process" variable="inputVariable" createInstance="yes"/><assign name="Assign_DefaultVariables"
                                                                                                                                                                                                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <from>'ECCOutwardPresentment'</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$CompositeName</to>
      </copy>
      <copy bpelx:insertMissingToData="yes">
        <from>$inputVariable.payload/ns1:MessageHeader/ns1:TransactionID</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageHeader/ns1:TransactionID</to>
      </copy>
      <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <from>$inputVariable.payload/ns1:MessageHeader/ns1:ApplicationCode</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$SourceAppCode</to>
      </copy>
      <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <from>$inputVariable.payload/ns1:MessageHeader/ns1:TransactionID</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$SourceExecutionID</to>
      </copy>
      <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <from>ora:getFlowId()</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InstanceID</to>
      </copy>
      <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <from>ora:toCDATA($inputVariable.payload)</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ExecutionInput</to>
      </copy>
      <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <from>$inputVariable.payload/ns1:MessageHeader/ns1:ApplicationUserName</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$SourceAppUserName</to>
      </copy>
      <copy>
        <from>'S'</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ExecutionStatus</to>
      </copy>
      <copy>
        <from>'Success'</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:StatusInformation/ns1:Status</to>
      </copy>
    </assign><extensionActivity xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <bpelx:exec name="Java_validation" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
        <![CDATA[//Mandatory Elements validation    
try {    
   java.net.InetAddress ipAddress = java.net    
                                        .InetAddress    
                                        .getLocalHost();    
   String clientIp = (ipAddress.getHostAddress()).trim();    
 
   String compositeName = (String) getVariableData("CompositeName");    
   String transactionID =    
       ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:TransactionID"))    
       .getTextContent();    
   String applicationCode =    
       ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:ApplicationCode"))    
       .getTextContent();    
   String applicationUserName =    
       ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:ApplicationUserName"))    
       .getTextContent();    
     
   String intReferance =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:IntReferance")).getTextContent(); 
   String bFDAccountNumber =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:BFDAccountNumber")).getTextContent(); 
   String bFDBranchCode =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:BFDBranchCode")).getTextContent(); 
   String bFDBankCode =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:BFDBankCode")).getTextContent(); 
   String chequeSerial =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:ChequeSerial")).getTextContent(); 
   String payAccountNumber =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:PayAccountNumber")).getTextContent(); 
   String payBranchCode =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:PayBranchCode")).getTextContent(); 
   String payBank =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:PayBank")).getTextContent(); 
   String chequeAmount =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:ChequeAmount")).getTextContent(); 
   String currencyCode =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:CurrencyCode")).getTextContent(); 
   String paymentType =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:PaymentType")).getTextContent(); 
   String urgency =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:Urgency")).getTextContent(); 
   String expectedReplyDate =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:ExpectedReplyDate")).getTextContent(); 
   String wasPDC =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:WasPDC")).getTextContent(); 
   String beneficiaryBranchCode =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:BeneficiaryBranchCode")).getTextContent(); 
   String appID =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:AppID")).getTextContent(); 
   String chequeSequence =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:ChequeSequence")).getTextContent(); 
   String userID =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:UserID")).getTextContent(); 
   String paymentMethod =   ((org.w3c.dom.Element) getVariableData("inputVariable", "payload", "//ns1:PaymentMethod")).getTextContent(); 
    
       
   String MandatoryField = null;    
 
   if (transactionID.equals("")) {    
       MandatoryField = "TransactionID";    
   } else if (applicationCode.equals("")) {    
       MandatoryField = "ApplicationCode";    
   } else if (applicationUserName.equals("")) {    
       MandatoryField = "ApplicationUserName";    
   } else if("".equals(intReferance)){MandatoryField = "IntReferance";} 
    else if("".equals(bFDAccountNumber)){MandatoryField = "BFDAccountNumber";} 
    else if("".equals(bFDBranchCode)){MandatoryField = "BFDBranchCode";} 
    else if("".equals(bFDBankCode)){MandatoryField = "BFDBankCode";} 
    else if("".equals(chequeSerial)){MandatoryField = "ChequeSerial";} 
    else if("".equals(payAccountNumber)){MandatoryField = "PayAccountNumber";} 
    else if("".equals(payBranchCode)){MandatoryField = "PayBranchCode";} 
    else if("".equals(payBank)){MandatoryField = "PayBank";} 
    else if("".equals(chequeAmount)){MandatoryField = "ChequeAmount";} 
    else if("".equals(currencyCode)){MandatoryField = "CurrencyCode";} 
    else if("".equals(paymentType)){MandatoryField = "PaymentType";} 
    else if("".equals(urgency)){MandatoryField = "Urgency";} 
    else if("".equals(expectedReplyDate)){MandatoryField = "ExpectedReplyDate";} 
    else if("".equals(wasPDC)){MandatoryField = "WasPDC";} 
    else if("".equals(beneficiaryBranchCode)){MandatoryField = "BeneficiaryBranchCode";} 
    else if("".equals(appID)){MandatoryField = "AppID";} 
    else if("".equals(chequeSequence)){MandatoryField = "ChequeSequence";} 
    else if("".equals(userID)){MandatoryField = "UserID";} 
    else if("".equals(paymentMethod)){MandatoryField = "PaymentMethod";} 
 
   if (MandatoryField != null) {    
       setVariableData("ExecutionStatus", "F");    
       setVariableData("outputVariable", "payload", "//ns1:Status", "Failed");    
       setVariableData("ErrorBusCode", "VF0001");    
       setVariableData("ErrorBusMessage",    
                       "Validation Fault : Unable to FulFill Transaction, Entry [ " + MandatoryField +    
                       " ] is Mandatory.");    
       setVariableData("ErrorTechCode", "OFM-VAL-0001");    
       setVariableData("ErrorTechMessage", "Entry [ " + MandatoryField + " ] is Mandatory.");    
   } else {    
       com.dimensions.mw.utils.validationManagement.ValidationManager validationManager =    
           new com.dimensions.mw.utils.validationManagement.ValidationManager();    
       String validationCheck =    
           validationManager.ApplyValidation(applicationCode, compositeName, "isAllowedSource",    
                                             compositeName + "###" + applicationCode + "###" + clientIp +    
                                             "###" + "token" + "###" + applicationUserName);    
 
       if (validationCheck == null) {    
           String attributesCheck =    
               validationManager.ApplyValidation(applicationCode, compositeName, "validateAttributes",    
                                                 "IntReferance:Number" + ":" + intReferance);    
           if (attributesCheck != null) {    
               setVariableData("ExecutionStatus", "F");    
               setVariableData("outputVariable", "payload", "//ns1:Status", "Failed");    
               setVariableData("ErrorBusCode", attributesCheck.split("#")[0]);    
               setVariableData("ErrorBusMessage", attributesCheck.split("#")[1].split("##")[0]);    
               setVariableData("ErrorTechCode", attributesCheck.split("##")[1].split("###")[0]);    
               setVariableData("ErrorTechMessage", attributesCheck.split("###")[1].split("###-")[0]);    
               setVariableData("ErrorTechDetails", attributesCheck.split("###-")[1].split("#####")[0]);    
           }    
       } else {    
           setVariableData("ExecutionStatus", "F");    
           setVariableData("outputVariable", "payload", "//ns1:Status", "Failed");    
           setVariableData("ErrorBusCode", validationCheck.split("#")[0]);    
           setVariableData("ErrorBusMessage", validationCheck.split("#")[1].split("##")[0]);    
           setVariableData("ErrorTechCode", validationCheck.split("##")[1].split("###")[0]);    
           setVariableData("ErrorTechMessage", validationCheck.split("###")[1].split("###-")[0]);    
           setVariableData("ErrorTechDetails", validationCheck.split("###-")[1].split("#####")[0]);    
       }    
   }    
 
} catch (Exception exc) {    
   addAuditTrailEntry(exc);    
   exc.printStackTrace();    
}]]>
      </bpelx:exec>
   </extensionActivity><if name="If_validationSuccessfull"
                           xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         
      <![CDATA[Yes]]></documentation>
      <condition>$ExecutionStatus = 'S'</condition>
      <sequence name="Sequence1">
         <assign name="Assign_RemoveEmptyTag">
          <extensionAssignOperation>
            <bpelx:remove xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
              <bpelx:target expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation</bpelx:target>
            </bpelx:remove>
          </extensionAssignOperation>
        </assign>
         <extensionActivity>
            <bpelx:exec name="Java_DBLog" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
               
            <![CDATA[try {     
            String weblogicDomainName = "Unknown";     
            String serverName = "Unknown";     
            javax.naming.InitialContext ctx = null;     
            ctx = new javax.naming.InitialContext();     
            javax.management.MBeanServer beanServer =     
                (javax.management.MBeanServer) ctx.lookup("java:comp/env/jmx/runtime");     
            javax.management.ObjectName runtimeService =     
                new javax.management.ObjectName("com.bea:Name=RuntimeService,Type=weblogic.management.mbeanservers.runtime.RuntimeServiceMBean");     
            javax.management.ObjectName domainCFG =     
                (javax.management.ObjectName) beanServer.getAttribute(runtimeService, "DomainConfiguration");     
            weblogicDomainName = (String) beanServer.getAttribute(domainCFG, "Name");     
            javax.management.ObjectName serverCFG =     
                (javax.management.ObjectName) beanServer.getAttribute(runtimeService, "ServerConfiguration");     
            serverName = (String) beanServer.getAttribute(serverCFG, "Name");     
     
            String executionID = com.dimensions.mw.utils.compositeManagement.CompositeManager.getUniqueId();     
            setVariableData("ExecutionID", executionID);     
            String compositeName = (String) getVariableData("CompositeName");     
            String sourceAppCode = (String) getVariableData("SourceAppCode");     
            String sourceExecutionID = (String) getVariableData("SourceExecutionID");     
            String sourceAppUserName = (String) getVariableData("SourceAppUserName");     
            String executionInput = (String) getVariableData("ExecutionInput");     
            String instanceID = (String) getVariableData("InstanceID");     
            String bussinessKey = (String) getVariableData("BusinessKey");     
     
            com.dimensions.mw.utils.loggerManagement.LoggerManager     
               .insertProcessInstance(compositeName, executionID, sourceAppCode, sourceExecutionID, sourceAppUserName,     
                                      executionInput, instanceID, weblogicDomainName, serverName, bussinessKey);     
        } catch (Exception exc) {     
 addAuditTrailEntry(exc);    
                    exc.printStackTrace();   
        }]]></bpelx:exec>
         </extensionActivity>
         <scope name="Scope1">
            <faultHandlers>
               <catchAll>
                  <sequence name="Sequence3">
                     <assign name="Assign_Fault">
                  <copy>
                    <from>ora:getFaultAsString()</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$FaultStr</to>
                  </copy>
                  <copy>
                    <from>ora:getFaultName()</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$FaultCode</to>
                  </copy>
                  <copy>
                    <from>'F'</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ExecutionStatus</to>
                  </copy>
                  <copy>
                    <from>'Failed'</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:StatusInformation/ns1:Status</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <from>''</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorBusCode</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <from>''</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorBusMessage</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <from>''</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorTechCode</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <from>''</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorTechMessage</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <from>''</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorTechDetails</to>
                  </copy>
                </assign>
                     <extensionActivity>
                        <bpelx:exec name="Java_ManageError" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                           <![CDATA[try {                         
                      String faultStr = (String)getVariableData("FaultStr");                         
                      String faultCode = (String)getVariableData("FaultCode");                         
                      String techSystemOperation = (String)getVariableData("TechSystemOperation");                         
                      String techSystem = (String)getVariableData("TechSystem");                 
                      String compositeName = (String)getVariableData("CompositeName");             
                                   
                      com.dimensions.mw.utils.errorManagement.inMemoryData.ErrorDefinitionBean errorDefinitionBean =                         
                          new com.dimensions.mw.utils.errorManagement.inMemoryData.ErrorDefinitionBean();                         
                                   
                      com.dimensions.mw.utils.errorManagement.ErrorManager errorManager = new com.dimensions.mw.utils.errorManagement.ErrorManager();                         
                                   
                      errorDefinitionBean = errorManager.getErrorInformation(faultCode+" "+faultStr,techSystem,techSystemOperation,compositeName);                          
                           
                      setVariableData("outputVariable", "payload", "//ns1:ErrorBusCode",errorDefinitionBean.getErrorBussinessCode() );                  
                      setVariableData("outputVariable", "payload", "//ns1:ErrorBusMessage", errorDefinitionBean.getErrorBussinessMessage());                  
                      setVariableData("outputVariable", "payload", "//ns1:ErrorTechCode",errorDefinitionBean.getErrorTechCode());                  
                      setVariableData("outputVariable", "payload", "//ns1:ErrorTechMessage",errorDefinitionBean.getErrorTechMessage());              
                      setVariableData("outputVariable", "payload", "//ns1:ErrorTechDetails",techSystem+" | "+techSystemOperation+" | "+ errorDefinitionBean.getErrorTechDetails());        
                      
                                  
              } catch (Exception exc) {     
                    addAuditTrailEntry(exc);   
                    exc.printStackTrace();  
              }]]>
                        </bpelx:exec>
                     </extensionActivity>
                  </sequence>
               </catchAll>
            </faultHandlers>
            <sequence name="Sequence4">
            <assign name="Assign_ECCOutwardPresentment_input">
              <copy bpelx:insertMissingToData="yes" ignoreMissingFromData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:IntReferance</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_REFERENCE</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:BFDAccountNumber</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_BFDACCOUNTNUMBER</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:BFDBranchCode</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_BFDBRANCHCODE</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:BFDBankCode</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_BFDBANKCODE</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:ChequeSerial</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_CHEQUESERIAL</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:PayAccountNumber</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_PAYACCOUNTNUMBER</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:PayBranchCode</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_PAYBRANCHCODE</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:PayBank</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_PAYBANK</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:ChequeAmount</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_CHEQUEAMOUNT</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:CurrencyCode</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_CURRENCYCODE</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:PaymentType</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_PAYMENTTYPE</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:Urgency</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_URGENCY</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:ExpectedReplyDate</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_EXPECTEDREPLYDATE</to>
              </copy>
              <copy bpelx:insertMissingToData="yes" ignoreMissingFromData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:WasPDC</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_WASPDC</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:BeneficiaryBranchCode</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_BENBRCHCODE</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:AppID</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:APP_ID</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:UserID</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_USER</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:PaymentMethod</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:PAY_METHOD</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$inputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:ChequeSequence</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable.InputParameters/ns5:P_CHEQUESEQUENCE</to>
              </copy>
            </assign>
            <invoke name="Invoke_ECCOutwardPresentment"
                    partnerLink="GET_ECC_OUTWARD_PRESENTMENT_Reference"
                    portType="ns4:GET_ECC_OUTWARD_PRESENTMENT_Reference_ptt"
                    operation="GET_ECC_OUTWARD_PRESENTMENT_Reference"
                    inputVariable="Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_InputVariable"
                    outputVariable="Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_OutputVariable"
                    bpelx:invokeAsDetail="no"/>
            <assign name="Assign_ECCOutwardPresentment_output">
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_OutputVariable.OutputParameters/ns5:P_RESPONSESTATUS</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:Transaction/ns1:ResponseStatus</to>
              </copy>
              <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                <from>$Invoke_ECCOutwardPresentment_GET_ECC_OUTWARD_PRESENTMENT_Reference_OutputVariable.OutputParameters/ns5:P_RESPONSEDESCRIPTION</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:TransactionInformation/ns1:Transaction/ns1:ResponseDescription</to>
              </copy>
            </assign>
          </sequence>
         </scope>
         <assign name="Assign_FinalOutput">
            <copy>
               <from>ora:toCDATA($outputVariable.payload)</from>
               <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ExecutionOutput</to>
            </copy>
         </assign>
         <extensionActivity>
            <bpelx:exec name="Java_FinalDBLog" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
               <![CDATA[try {    
            String executionID = (String) getVariableData("ExecutionID");    
            String executionStatus = (String) getVariableData("ExecutionStatus");    
            String sourceExecutionID = (String) getVariableData("SourceExecutionID");    
            String executionOutput = (String) getVariableData("ExecutionOutput");    
            String compositeName = (String) getVariableData("CompositeName");    
    
            com.dimensions.mw.utils.loggerManagement.LoggerManager    
               .updateProcessInstance(executionID, executionOutput, executionStatus, compositeName);    
        } catch (Exception exc) {    
            addAuditTrailEntry(exc);   
                    exc.printStackTrace();  
        }]]>
            </bpelx:exec>
         </extensionActivity>
      </sequence>
      <else>
         <documentation>
            <![CDATA[No]]>
         </documentation>
         <sequence name="Sequence2">
            <assign name="Assign_validationFailed">
               <copy>
                  <from>$ErrorBusCode</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorBusCode</to>
               </copy>
               <copy>
                  <from>$ErrorTechDetails</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorTechDetails</to>
               </copy>
               <copy>
                  <from>$ErrorBusMessage</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorBusMessage</to>
               </copy>
               <copy>
                  <from>$ErrorTechCode</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorTechCode</to>
               </copy>
               <copy>
                  <from>$ErrorTechMessage</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns1:MessageBody/ns1:ErrorInformation/ns1:ErrorTechMessage</to>
               </copy>
            </assign>
         </sequence>
      </else>
   </if><!-- Generate reply to synchronous request -->
   
   
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="eccoutwardpresentmentbpel_client" portType="client:ECCOutwardPresentmentBPEL" operation="process" variable="outputVariable"/>
  </sequence>
</process>